" vim:foldmethod=marker

" ==============================================================================
" Vim configuration {{{
" ==============================================================================

syntax on
set background=dark
set termguicolors
" colorscheme base16-onedark

packadd! matchit

set ruler
set showmode
set showcmd
set number
set signcolumn=number

set incsearch
set ignorecase
set smartcase

set backspace=indent,eol,start
set whichwrap=b,s,<,>,[,]
set re=0

set nowrap
autocmd FileType text setlocal textwidth=80

set mouse=a
set mousehide

set shiftwidth=2
set softtabstop=2
set tabstop=2
set smarttab
set expandtab
set shiftround
autocmd FileType python setlocal sw=4 sts=4 et

set novisualbell
set noerrorbells
set vb t_vb=
set updatetime=300

set hidden
set autowrite
set autoread
set nobackup
set nowritebackup
set noswapfile

set splitbelow
set splitright

set laststatus=2
set cmdheight=2
set shortmess+=c

set history=1000
set undolevels=1000

set path+=**
set wildignore=*.o,*.pyc,*.class,*.d,*/.git/*,*/node_modules/*,.DS_Store
set wildmenu

set grepprg=rg\ --vimgrep\ --no-heading\ --smart-case
set grepformat=%f:%l:%c:%m,%f:%l:%m

" }}}

" ==============================================================================
" Custom filetypes {{{
" ==============================================================================

autocmd BufRead,BufNewFile *.gyp      set filetype=python et ts=2 sw=2
autocmd BufRead,BufNewFile *.gypi     set filetype=python et ts=2 sw=2
autocmd BufRead,BufNewFile DEPS       set filetype=python et ts=2 sw=2
autocmd BufRead,BufNewFile .eslintrc  set filetype=json
autocmd BufRead,BufNewFile .babelrc   set filetype=json
autocmd BufRead,BufNewFile *.tsx      set filetype=typescript.tsx
autocmd BufRead,BufNewFile *.js,*.jsx set filetype=javascript.tsx

" }}}

" ==============================================================================
" Spell checking {{{
" ==============================================================================

autocmd FileType gitcommit setlocal spell
autocmd FileType text      setlocal spell
autocmd FileType plaintex  setlocal spell
autocmd FileType tex       setlocal spell
autocmd FileType markdown  setlocal spell
autocmd FileType rst       setlocal spell

" }}}

" ==============================================================================
" Markdown settings {{{
" ==============================================================================

let g:markdown_fenced_languages = [
  \ 'js=javascript', 'javascript', 'ts=typescript', 'typescript',
  \ 'html', 'css', 'c', 'cpp', 'c++=cpp', 'viml=vim', 'python',
  \ 'sh', 'bash=sh', 'console=sh', 'ini=dosini'
  \ ]

" }}}

" ==============================================================================
" Airline settings {{{
" ==============================================================================

" let g:airline_theme='base16'

" }}}

" ==============================================================================
" EditorConfig settings {{{
" ==============================================================================

let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']

" }}}

" ==============================================================================
" Keybindings {{{
" ==============================================================================

" Setup a convenient leader key
let mapleader = ' '

" Show and hide search highlighting
nmap <leader>/ :set hlsearch!<CR>

" Window management
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

nnoremap <leader>q :close<CR>

" Git keybindings
nnoremap <leader>g :Git<CR>

" Show the undo tree
nnoremap <leader>u :UndotreeToggle<CR>

" Find files and buffers with fzf
nnoremap <C-p> :Files<CR>
nnoremap <C-n> :Buffers<CR>

" Grep for files
nnoremap <C-s> :copen<CR>:grep<Space>
nnoremap <leader>K :grep "\b<C-R><C-W>\b"<CR>:cw<CR>

" Open and close quickfix/location lists
nnoremap <esc>c :copen<CR>
nnoremap <esc>C :close<CR>
nnoremap <esc>l :lopen<CR>
nnoremap <esc>L :lclose<CR>

" Switch between dark and light themes
function s:set_dark()
  set background=dark
"   colorscheme base16-onedark
endfunction

command Dark :call <SID>set_dark()

function s:set_light()
  set background=light
"   colorscheme base16-one-light
endfunction

command Light :call <SID>set_light()

" }}}

" ==============================================================================
" Detect dark/light mode when running in VSCode {{{
" ==============================================================================

if $TERM_PROGRAM == "vscode" && $VSCODE_VIM_SWITCH_THEME_AUTOMATICALLY == "true"
    colorscheme default
    if has("macunix")
        if trim(system("SystemThemeChecker")) == "light"
            set background=light
        else
            set background=dark
        endif
    endif
endif

" }}}
